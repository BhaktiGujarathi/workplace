//Generated by wsdl2apex

public class AsyncEligibleForHandover {
    public class EligibleForHandoverNoticeResponse_elementFuture extends System.WebServiceCalloutFuture {
        public String getValue() {
            EligibleForHandover.EligibleForHandoverNoticeResponse_element response = (EligibleForHandover.EligibleForHandoverNoticeResponse_element)System.WebServiceCallout.endInvoke(this);
            return response.return_x;
        }
    }
    public class AsyncEligibleForHandoverNoticeRuleHttpSoap11Endpoint {
        public String endpoint_x = 'http://34.231.6.33:8080/CRM_SR_NEW/services/EligibleForHandoverNoticeRule.EligibleForHandoverNoticeRuleHttpSoap11Endpoint/';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://action.com', 'EligibleForHandover'};
        public AsyncEligibleForHandover.EligibleForHandoverNoticeResponse_elementFuture beginEligibleForHandoverNotice(System.Continuation continuation,String RegistrationId,String ProcessName,String SubProcessName,String ProjectCity,String Project,String BuildingCode,String PermittedUse,String BedroomType,String ApplicableUnits,String UnitType,String CustomerType,String ModeofRequest,String AggrementStatus,String UnderAssignment) {
            EligibleForHandover.EligibleForHandoverNotice_element request_x = new EligibleForHandover.EligibleForHandoverNotice_element();
            request_x.RegistrationId = RegistrationId;
            request_x.ProcessName = ProcessName;
            request_x.SubProcessName = SubProcessName;
            request_x.ProjectCity = ProjectCity;
            request_x.Project = Project;
            request_x.BuildingCode = BuildingCode;
            request_x.PermittedUse = PermittedUse;
            request_x.BedroomType = BedroomType;
            request_x.ApplicableUnits = ApplicableUnits;
            request_x.UnitType = UnitType;
            request_x.CustomerType = CustomerType;
            request_x.ModeofRequest = ModeofRequest;
            request_x.AggrementStatus = AggrementStatus;
            request_x.UnderAssignment = UnderAssignment;
            return (AsyncEligibleForHandover.EligibleForHandoverNoticeResponse_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncEligibleForHandover.EligibleForHandoverNoticeResponse_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              'urn:EligibleForHandoverNotice',
              'http://action.com',
              'EligibleForHandoverNotice',
              'http://action.com',
              'EligibleForHandoverNoticeResponse',
              'EligibleForHandover.EligibleForHandoverNoticeResponse_element'}
            );
        }
    }
}