<apex:page standardController="Opportunity" extensions="MultipleUploadController" id="pid">  
     <apex:includeScript value="{!urlfor($Resource.MCATableSorter, 'jquery-1.11.1.min.js')}" />
    <head>
        <!-- CSS Start -->
        <style type="text/css">
            .attchmentVal {
                text-align: center;
                padding: 1.125em;
            }
            .pbTitle {
                text-align: left;
            }
            #dropbox {
                width: 90%; 
                height:30px;
                padding: 1.145em;
                margin: 0 auto;
                margin-bottom:14px;
                border: 6px white double;
                color:white;
                font:weight:bold;
                font-size:14px;
                border-color: white !important;
                border-radius:20px;
                background-color:#69c;
            }

            #preview {
                display: none;
                margin: 1.125em auto;
                border: 1px solid pink;
            }
             #assign-action-spinner-main {
            position: fixed;
            left: 0;
            top: 0;
            background-color:rgba(0,0,0,.6);
            height: 100%;
            width: 100%;
            z-index: 999;
            align: center;
            vertical-align: middle;
        }
        #assign-action-spinner-content {
            position: absolute; 
            top: 50%;
            left: 50%;
            z-index: 1000;
            background-color: #F5FCFF;
            width: 204;
            height: 94; 
            border-radius: 1em;
            border: 1px solid #CEECFF;
            padding: 20px 40px 20px 40px;
            margin-left: -116px;
            margin-top: -36px;
        }
        #assign-action-spinner-content img {
            width: 32;
            height: 32;
            align: center;
            vertical-align: middle;
        }
        #assign-action-spinner-content p {
            display: inline;
            font-size: 135%;
            font-weight: bold;
        }
        .divCss {
            width: 112%;
            font-size: 11px;
            /* vertical-align: middle; */
            padding-top: 3px;
            /* padding-right: 4px; */
            /* position: relative; */
             margin-left: -6px;
        }
        #dropbox{
            text-align: center;
        }
        </style>
        <!-- CSS End -->
        <script type="text/javascript">
            function runSaveAllAttachment() {

              setTimeout(function() {
                saveAllAttch();
              }, 500);
            }
            
            function checkButton() {
               if ($('.errorMsg').length <= 0)
                  hideButton();
            }
            
        </script>
    </head>
    <body class="attchmentVal">
        <apex:outputPanel id="dragDropSection">
            <div style="border-width:2px;border:4px #69c;height:auto;width:auto;border-radius:17px;">  &nbsp; 
            <div id="dropbox">
                <span id="droplabel">Drop files to attach</span>
            </div>
            <apex:outputPanel id="Op1">
                <img id="preview" src="" alt="[ image will display here ]" />
            </apex:outputPanel>
        </div>
        </apex:outputPanel>
           
    </body>
    
    <apex:form id="frmId">  
        <apex:pageMessages id="showmsg"/>
        <apex:actionFunction action="{!saveme}" name="saveAllAttch" rerender="pgBlkSctnAttachment" status="loadingPanel" oncomplete="checkButton();"/>
        <apex:actionFunction name="hideButton" status="loadingPanel" rerender="saveButton,pgBlkSctnAttachment"/>
        <apex:actionFunction action="{!CollectData}" name="collectDataBase64" reRender="Op,frmId, dragDropSection " status="loadingPanel" >
            <apex:param name="data" id="data" value="" />
            <apex:param name="name" id="name" value="" />
            
        </apex:actionFunction>
        <apex:actionFunction name="refershCom" reRender="Op,frmId, dragDropSection " status="loadingPanel" />
        <apex:actionStatus id="loadingPanel" layout="block">
        <apex:facet name="start">
            <div id="assign-action-spinner-main">
                <div id="assign-action-spinner-content">
                    <img src="/img/analytics/reportbuilder/icons/spinner32.gif" alt="Processing..." title="Processing..." /> 
                    <p>Processing...</p>
                </div>
            </div>
        </apex:facet>
    </apex:actionStatus>
        &nbsp;
        <apex:pageBlock title="{!uploadTitle}">  
           
            <apex:pageBlockButtons >  

                <!--       Target Type attribute description
                _parent :The response is displayed in the parent frame
                _top    : The response is displayed in the full body of the window
                _self   : The response is displayed in the same frame (this is default)
                _blank  : The response is displayed in a new window or tab
                framename : The response is displayed in a named iframe  --> 

                <!-- upload and save the selected file and return to same page -->
                <apex:commandLink value="Upload" target="_parent" styleClass="btn" 
                    style="text-decoration:None" action="{!SaveAttachments}" status="loadingPanel"/>
                <apex:commandLink value="Return to Wizard" target="_parent" styleClass="btn" style="text-decoration:None" action="{!closedRedirect}"/>  
            </apex:pageBlockButtons>  

            <!-- execute when picklist value change  -->
            <apex:actionFunction name="ChangeCount" action="{!ChangeCount}"/>  
            <apex:pageblocksection >  
                <apex:pageBlockSectionItem dataStyleClass="testClass">  
                      <div class="divCss">How many files you want to upload?</div>
                    <apex:selectList onchange="ChangeCount() ;" multiselect="false" size="1" value="{!FileCount}">  
                        <apex:selectOption itemLabel="--None--" itemValue=""/>  <!-- By default value -->
                        <apex:selectOptions value="{!filesCountList}"/>  <!-- count number of file to be uploaded  -->
                    </apex:selectList>  
                </apex:pageBlockSectionItem>  
            </apex:pageblocksection>  
            
            <!-- Rendering based on a condtion -->
            <apex:pageBlockSection title="Select Files" rendered="{!IF(FileCount != null && FileCount != '', true , false)}"> 
                <!-- get the uploaded file details  -->
                <apex:repeat value="{!allFileList}" var="AFL">  
                    <apex:inputfile value="{!AFL.Body}" filename="{!AFL.Name}"  /> 
                    <apex:pageBlockSectionItem >
                        <apex:outputLabel value="Description"/>                      
                        <apex:inputText value="{!AFL.description}"/> 
                    </apex:pageBlockSectionItem>  
                </apex:repeat>  
            </apex:pageBlockSection>                     

        </apex:pageBlock>  


        <apex:pageBlock title="Attachments" id="Op" mode="inlineEdit">&nbsp;
            <apex:pageBlockButtons location="top" >  
                <apex:commandButton onclick="runSaveAllAttachment();" id="saveButton" value="Save" rerender="showmsg pgBlkSctnAttachment"  
                rendered="{!isShowBtn}" style="height:25px; width:90px;font-weight:bold;" />
            </apex:pageBlockButtons>
            <apex:pageblockSection columns="1" id="pgBlkSctnAttachment">
            
            <apex:outputPanel id="attachmentTablePanel">
            <apex:pageBlockTable value="{!Oplist}" var="item" cellpadding="10" rules="all" styleclass="pageblock" id="pgBlkTbl"> 
                <apex:column >
                    <apex:outputLink value="/servlet/servlet.FileDownload?file={!item.Id}" target="blank" rendered="{!NOT(ISBLANK(item.Id))}"> View </apex:outputLink>
                    <apex:outputLabel value=" | " rendered="{!($ObjectType.Attachment.deletable)}"/>
                        <apex:commandLink action="{!deleteAttachment}" value="Delete" rerender="Op" status="loadingPanel" rendered="{!($ObjectType.Attachment.deletable)}">
                            <apex:param name="indexToRemove" value="{!item.Id}" assignTo="{!indexToRemove}"></apex:param>
                        </apex:commandLink>
                </apex:column>
                <apex:column HeaderValue="Title" style="text-align: left;" > 
                   
                    <apex:outputField value="{!item.Name}"  style="text-align: left;" /> 
                     
                    
                </apex:column> 
                
                <apex:column HeaderValue="File Description">
                    <apex:actionRegion >
                        <apex:outputField value="{!item.description}">
                            <apex:inlineEditSupport disabled="false" event="ondblClick" showOnEdit="saveButton" />
                        </apex:outputField>
                    </apex:actionRegion>  
                </apex:column>
                <apex:column headerValue="Private">
                    <apex:outputField value="{!item.IsPrivate}" />
                </apex:column>
                <apex:column value="{!item.LastModifiedDate}" style="text-align: left;"/> 
                <apex:column HeaderValue="Created By" style="text-align: left;">
                    <apex:outputField value="{!item.Createdbyid}"  style="text-align: left;" /> 
                </apex:column>  
            </apex:pageBlockTable>
            </apex:outputPanel>
            </apex:pageblockSection>
        </apex:pageBlock>
     
     <script type="text/javascipt">
        function Reload(){
            window.location.href=window.location.href;
        }
     </script>
    
    <script type="text/javascript">
        var fName = new Array();
        var dropbox = document.getElementById('dropbox');
        var count = 0;
        // # Using an EventListener object
        var dropListener = {
    
            handleEvent: function(event){
                if (event.type === 'dragenter') { this.onDragEnter(event); }
                if (event.type === 'dragexit') { this.onDragExit(event); }
                if (event.type === 'dragover') { this.onDragOver(event); }
                if (event.type === 'drop') { this.onDragDrop(event); }
            },
    
            onDragEnter: function(event){
                event.preventDefault();
                event.stopPropagation();
                console.debug('enter')
            },
    
            onDragExit: function(event){
                event.preventDefault();
                event.stopPropagation();
            },
    
            onDragOver: function(event){
                event.preventDefault();
                event.stopPropagation();
            },
    
            onDragDrop: function(event){
                event.preventDefault();
                event.stopPropagation();
                var isProcess = false;
                var files = event.dataTransfer.files,
                file = files;
                if (files.length == 1 ) {
                    document.getElementById('droplabel').innerHTML ='Uploading ' + files[0].name;
                }else if (files.length  >  1) {
                    document.getElementById('droplabel').innerHTML ='Uploading ' + files.length + ' files';
                }
                if (files.length) {
                    for (i = 0; i < files.length; i++) { 
                        file = files[i];
                        if((files[i].size)/(1024*1024) < 15) {
                            isProcess = true;
                            //document.getElementById('droplabel').innerHTML = 'Uploading ' + file.name;                        
                            this.processImage(file, i);
                        } else {
                            alert('The file size of ' +files[i].name+' is too large. Please upload files less than 15 MB.');
                        }
                    }
                    if(!isProcess)
                        refershCom();
                }
            },
    
            processImage: function(file, i){
                fName.push(file.name);
                
                if (! file.type.match('image.*')) {
                    //document.getElementById('droplabel').innerHTML ='Uploading ' + file.name;
                   // return;
                }
    
                var reader = new FileReader();
            
                reader.onloadend = this.onReaderLoadEnd;
                reader.readAsDataURL(file);
            },
            
            onReaderLoadEnd: function(event){
                var img = document.getElementById("preview");
                img.src = event.target.result;
                collectDataBase64(img.src, fName[count]);
                count++;
            }
        };
    
        // ## Adding drag and drop event listeners
    
        dropbox.addEventListener('dragenter', dropListener, false);
        dropbox.addEventListener('dragexit', dropListener, false);
        dropbox.addEventListener('dragover', dropListener, false);
        dropbox.addEventListener('drop', dropListener, false);
    
    </script>
     </apex:form>
</apex:page>