<apex:page standardController="Opportunity" cache="true" sidebar="false"
        extensions="GRIDHomePageExtension" > 
    <!--
    <apex:includeScript value="{!urlfor($Resource.MCATableSorter, 'jquery-1.11.1.min.js')}" /> 
    -->
    <apex:stylesheet value="{!URLFOR($Resource.SLDS213, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}" 
    />

    <style type="text/css">
        #assign-action-spinner-main {
            position: fixed;
            left: 0;
            top: 0;
            background-color:rgba(0,0,0,.6);
            height: 100%;
            width: 100%;
            z-index: 999;
            align: center;
            vertical-align: middle;
        }

        #assign-action-spinner-content {
            position: absolute; 
            top: 50%;
            left: 50%;
            z-index: 1000;
            background-color: #F5FCFF;
            width: 204;
            height: 94; 
            border-radius: 1em;
            border: 1px solid #CEECFF;
            padding: 20px 40px 20px 40px;
            margin-left: -116px;
            margin-top: -36px;
        }

        #assign-action-spinner-content img {
            width: 32;
            height: 32;
            align: center;
            vertical-align: middle;
        }

        #assign-action-spinner-content p {
            display: inline;
            font-size: 135%;
            font-weight: bold;
        }

        .hoverhighlight {
            background-color:#BFEFFF;
        }

        .rich-tabhdr-side-cell {
            width: 100px;
            height: 40px;
        }

        .contentTable td:hover {
            background-color :#7addff;
        }

        .opportunityTab .secondaryPalette, .individualPalette .opportunityBlock .secondaryPalette{
            border-color: transparent;
        }

        .activeTab {
            color:black; 
            background-image: -webkit-gradient(linear, left bottom, left top, 
                               color-stop(0, #FFFFFF), color-stop(1, #ADCDAD))
        }

        .inactiveTab {
            color:black; 
            background-image:-webkit-gradient(linear, left bottom, left top, 
                              color-stop(0, #FFFFFF), color-stop(1, #C8C8C8));
        }
        
        .hidden {
            display : none;
        }
        
    </style>

    <apex:includeScript value="{!urlfor($Resource.GRIDResource, 'GRIDResource/JS/jquery-1.11.1.min.js')}" />

    <!-->
    <apex:tabPanel switchType="client" id="tabpanel" tabClass="activeTab" inactiveTabClass="inactiveTab">
        <apex:tab id="submissionTab" label="Submissions" 
                  rendered="{!AND(tabToSettingMap['Submissions'].Display_Tab__c, $ObjectType.Submission__c.accessible)}" > 
                  <c:GRIDSubmissionComponent />
        </apex:tab>
        <apex:tab id="offerTab" label="Offers" 
                  rendered="{!AND(tabToSettingMap['Offers'].Display_Tab__c, $ObjectType.Offer__c.accessible)}" > 
                  <c:GRIDOffersComponent />
        </apex:tab>
        <apex:tab id="stipTab" label="Stips" 
                  rendered="{!AND(tabToSettingMap['Stips'].Display_Tab__c, $ObjectType.Stips__c.accessible)}" > 
                  <c:GRIDStipsComponent />
        </apex:tab>
        <apex:tab id="loanbalanceTab" label="Loan Balances" 
                  rendered="{!AND(tabToSettingMap['Loan_Balances'].Display_Tab__c, $ObjectType.Loan_Balance__c.accessible)}"> 
                  <c:GRIDLoanBalanceComponent />
        </apex:tab>
        <apex:tab id="bankstatementTab" label="Bank Statements" 
                  rendered="{!AND(tabToSettingMap['Bank_Statements'].Display_Tab__c, $ObjectType.Bank_Account__c.accessible)}"> 
                  <c:GRIDBankStatementsComponent />
        </apex:tab>
        <apex:tab id="creditcardTab" label="Merchant Statements" 
                  rendered="{!AND(tabToSettingMap['Credit_Cards'].Display_Tab__c, $ObjectType.Credit_Card__c.accessible)}"> 
                  <c:GRIDCreditCardsComponent />
        </apex:tab>
        <apex:tab id="receivableTab" label="Receivables" 
                  rendered="{!AND(tabToSettingMap['Receivables'].Display_Tab__c, $ObjectType.Receivable__c.accessible)}"> 
                  <c:GRIDReceivablesComponent />
        </apex:tab>
        <apex:tab id="payableTab" label="Payables" 
                  rendered="{!AND(tabToSettingMap['Payables'].Display_Tab__c, $ObjectType.Payable__c.accessible)}"> 
                  <c:GRIDPayablesComponent />
        </apex:tab>
        <apex:tab id="syndicationTab" label="Syndications" 
                  rendered="{!AND(tabToSettingMap['Syndications'].Display_Tab__c, $ObjectType.Syndication__c.accessible)}"> 
                  <c:GRIDSyndicationsComponent />
        </apex:tab>
        <apex:tab id="contactroleTab" label="Contact Roles" 
                  rendered="{!tabToSettingMap['Contact_Roles'].Display_Tab__c}"> 
                  <c:GRIDContactRoleComponent />
        </apex:tab>
        <apex:tab id="taskTab" label="Tasks" 
                  rendered="{!tabToSettingMap['Tasks'].Display_Tab__c}" > 
                  <c:GRIDTaskComponent /> 
        </apex:tab> 
        <apex:tab id="attachmentTab" label="Attachments" 
                  rendered="{!tabToSettingMap['Attachments'].Display_Tab__c}"> 
                  <c:GRIDAttachmentComponent />
        </apex:tab>
    </apex:tabPanel>
    <-->
   
    <div class="cmb" >  
        <div class="slds-tabs--scoped" style ="width : 100px">
            <ul class="slds-tabs--scoped__nav" role="tablist" style ="width : 100%">
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Submissions'].Display_Tab__c, $ObjectType.Submission__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav" 
                    title="Submissions" role="presentation" data-tab = "submissions">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="0" 
                       aria-selected="true" aria-controls="tab-scoped-1" id="tab-scoped-1__item">
                       Submissions
                    </a> 
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Offers'].Display_Tab__c, $ObjectType.Offer__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Offers" role="presentation" data-tab = "offers">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-2" id="tab-scoped-2__item">
                       Offers
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Stips'].Display_Tab__c, $ObjectType.Stips__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Stips" role="presentation" data-tab = "stips">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-3" id="tab-scoped-3__item">
                       Stips
                    </a>
                </li>
                </apex:outputpanel>
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Loan_Balances'].Display_Tab__c, $ObjectType.Loan_Balance__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Loan Balances" role="presentation" data-tab = "loanBalances">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-4" id="tab-scoped-4__item">
                       Loan Balances
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Bank_Statements'].Display_Tab__c, $ObjectType.Bank_Account__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Bank Statements" role="presentation" data-tab = "bankStatements">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-5" id="tab-scoped-5__item">
                       Bank Statements
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Credit_Cards'].Display_Tab__c, $ObjectType.Credit_Card__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Merchant Statements" role="presentation" data-tab = "merchantStatements">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-6" id="tab-scoped-6__item">
                       Merchant Statements
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Receivables'].Display_Tab__c, $ObjectType.Receivable__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Receivables" role="presentation" data-tab = "receivables">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-7" id="tab-scoped-7__item">
                       Receivables
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Payables'].Display_Tab__c, $ObjectType.Payable__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Payables" role="presentation" data-tab = "payables">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-8" id="tab-scoped-8__item">
                       Payables
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!AND(tabToSettingMap['Syndications'].Display_Tab__c, $ObjectType.Syndication__c.accessible)}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Syndications" role="presentation" data-tab = "syndications">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-9" id="tab-scoped-9__item">
                       Syndications
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!tabToSettingMap['Contact_Roles'].Display_Tab__c}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Contact Roles" role="presentation" data-tab = "contactRoles">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-10" id="tab-scoped-10__item">
                       Contact Roles
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!tabToSettingMap['Tasks'].Display_Tab__c}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Tasks" role="presentation" data-tab = "tasks">
                    <a class="slds-tabs--scoped__link" href="#" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-11" id="tab-scoped-11__item">
                       Tasks
                    </a>
                </li>
                </apex:outputpanel>
                
                <apex:outputpanel rendered="{!tabToSettingMap['Attachments'].Display_Tab__c}">
                <li class="tabTitle slds-tabs--scoped__item slds-text-title slds-tabs--scoped__nav"  
                    title="Attachments" role="presentation" data-tab = "attachments">
                    <a class="slds-tabs--scoped__link" href="#attachments" role="tab" tabindex="-1" 
                       aria-selected="false" aria-controls="tab-scoped-12" id="tab-scoped-12__item">
                       Attachments
                    </a>
                </li>
                </apex:outputpanel>
            </ul>
        </div>
    </div>
              
    <div id="submissions" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-1__item">
         <c:GRIDSubmissionComponent />
    </div>
    <div id="offers" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-2__item">
         <c:GRIDOffersComponent />
    </div>
    <div id="stips" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDStipsComponent />
    </div>
    <div id="loanBalances" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-2__item">
         <c:GRIDLoanBalanceComponent />
    </div>
    <div id="bankStatements" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDBankStatementsComponent />
    </div>
    <div id="merchantStatements" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-2__item">
         <c:GRIDCreditCardsComponent />
    </div>
    <div id="receivables" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDReceivablesComponent />
    </div>
    <div id="payables" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-2__item">
         <c:GRIDPayablesComponent />
    </div>
    <div id="syndications" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDSyndicationsComponent />
    </div>
    <div id="contactRoles" class="slds-tabs--scoped__content displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-2__item"> 
         <c:GRIDContactRoleComponent />
    </div>
    <div id="tasks" class="slds-tabs--scoped__content slds-hide displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDTaskComponent />
    </div>
    <div id="attachments" class="slds-tabs--scoped__content slds-hide displayblock hidden" 
         role="tabpanel" aria-labelledby="tab-scoped-3__item">
         <c:GRIDAttachmentComponent />
    </div>
        
    <apex:actionStatus id="loadingPanel" layout="block">
        <apex:facet name="start">
            <div id="assign-action-spinner-main">
                <div id="assign-action-spinner-content">
                    <img src="/img/analytics/reportbuilder/icons/spinner32.gif" 
                         alt="Processing..." title="Processing..." /> 
                    <p>Processing...</p>
                </div>
            </div>
        </apex:facet>
    </apex:actionStatus>

    <script type="text/javascript">
        t$ = jQuery.noConflict();
     
        <!-->function() {
            var list = t$('.tabTitle');
            var firstId = list[0].attr("data");
            firstId.show();
        }<-->  
        
        t$('body').on("click","a",function() {
            var list = t$('.tabTitle');
            var firstId = list[0].attr("data");
            firstId.show();
            if(t$(this).attr('href').search("https:") >= 0) {
                window.open(t$(this).attr('href'));
                return false;
            }
        });
        
        t$(function(){
            t$(".slds-tabs--scoped__nav li a").click(function(){
                t$(".displayblock").hide();
                <!-->var myDiv = t$(this).attr("href");<-->
                var myDivID = t$(this).attr("data");
                t$('.tabTitle').removeClass('slds-active');
                t$(this).parent().addClass('slds-active');
                t$(myDivID).show();
            });
        }); 
   
    </script> 
   
</apex:page>