<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionOverrides>
        <actionName>Close</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Delete</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>DeleteSeries</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Edit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>NewTask</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>View</actionName>
        <type>Default</type>
    </actionOverrides>
    <enableFeeds>false</enableFeeds>
    <fields>
        <fullName>OwnerId</fullName>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Priority</fullName>
        <picklist>
            <picklistValues>
                <fullName>High</fullName>
                <default>false</default>
                <highPriority>true</highPriority>
            </picklistValues>
            <picklistValues>
                <fullName>Normal</fullName>
                <default>true</default>
                <highPriority>false</highPriority>
            </picklistValues>
            <picklistValues>
                <fullName>Low</fullName>
                <default>false</default>
                <highPriority>false</highPriority>
            </picklistValues>
            <sorted>false</sorted>
        </picklist>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Status</fullName>
        <picklist>
            <picklistValues>
                <fullName>Not Started</fullName>
                <closed>false</closed>
                <default>true</default>
            </picklistValues>
            <picklistValues>
                <fullName>In Progress</fullName>
                <closed>false</closed>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Completed</fullName>
                <closed>true</closed>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Waiting on someone else</fullName>
                <closed>false</closed>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Deferred</fullName>
                <closed>false</closed>
                <default>false</default>
            </picklistValues>
            <sorted>false</sorted>
        </picklist>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Subject</fullName>
        <picklist>
            <picklistValues>
                <fullName>Call</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Email</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Send Letter</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Send Quote</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Other</fullName>
                <default>false</default>
            </picklistValues>
            <sorted>false</sorted>
        </picklist>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Type</fullName>
        <picklist>
            <picklistValues>
                <fullName>Call</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Meeting</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Other</fullName>
                <default>false</default>
            </picklistValues>
            <picklistValues>
                <fullName>Email</fullName>
                <default>false</default>
            </picklistValues>
            <sorted>false</sorted>
        </picklist>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>WhatId</fullName>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>WhoId</fullName>
        <type>Lookup</type>
    </fields>
    <webLinks>
        <fullName>Close_Task</fullName>
        <availability>online</availability>
        <description>Mark all selected task records as completed (closed).</description>
        <displayType>massActionButton</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Close Tasks</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <requireRowSelection>true</requireRowSelection>
        <url>{!requireScript(&quot;/soap/ajax/10.0/connection.js&quot;)};
sforce.connection.session = &quot;{!$Api.Session_ID}&quot;;
//sforce.debug.trace = true;

/**
 * Multi-record update of task.status field.
 * @param newStatus - a string, must be valid status, 
 * e.g. &quot;Completed&quot;, &quot;Deferred&quot;, etc.
 * @author Chris Wolf cw10025 AT gmail.com
 */
function taskStatusUpdateAll(newStatus) {
  try { 
    var taskUpdates = new Array();

    var taskIds = {!GETRECORDIDS($ObjectType.Task)}; // returns Tasks AND Events (unfortunately)
    if (taskIds == null || taskIds.length == 0) {
      alert(&quot;Please select the tasks you wish to mark as complete.&quot;);
      return;
    }
   
    // Must retrieve by ids to filter for Tasks and ignore Events
    var result = sforce.connection.retrieve(&quot;Id&quot;, &quot;Task&quot;, taskIds);
    if (result.length != taskIds.length) {
      throw(&quot;Task ids list length, &quot; + taskIds + &quot; not equal to number retrieved: &quot; + result.length);
     }

    for (var i = 0; i &lt; result.length; i++) {
      if (result[i] == null) {
        continue;
      }
      result[i].Status = newStatus;
      taskUpdates.push(result[i]);
    } 

    var result = sforce.connection.update(taskUpdates);

    var hasErrors = false;
    var errorReport = &quot;The following tasks could not be updated:\n&quot;;
    for (var i = 0; i &lt; result.length; i++) {
      if (!result[i].getBoolean(&quot;success&quot;)) {
        hasErrors = true;
        errorReport += (&quot;TaskId: &quot; + taskUpdates[i].Id + &quot;, error: &quot; + result[i].errors.message + &quot;\n&quot;);
        if (i == 20 &amp;&amp; i &lt; result.length) {
          errorReport += (&quot;...more errors - showing first 20 out of &quot; + &quot;result.length\n&quot;);
          break;
        }
      }
    }
    if (hasErrors) {
      alert(errorReport);
    }
    //window.location.reload(); &lt;== causes re-post warning alert in some cases
    window.location = window.location.href;
  } catch(e) {
    alert(e); // catch-all for any unspecified errors...
  }
}

taskStatusUpdateAll(&quot;Completed&quot;);</url>
    </webLinks>
    <webLinks>
        <fullName>activities__Mass_Update</fullName>
        <availability>online</availability>
        <displayType>massActionButton</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Mass Update Tasks</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <requireRowSelection>true</requireRowSelection>
        <url>{!REQUIRESCRIPT(&quot;/soap/ajax/20.0/connection.js&quot;)}
var records =  {!GETRECORDIDS( $ObjectType.Task)};
var returnURL = window.location.href;
if(records != null &amp;&amp; records != &apos;&apos;){
     mywin = window.open(&apos;/apex/activities__UpdateTasks?Ids=&apos;+records+&apos;&amp;retURL=&apos;+returnURL , &apos;_top&apos;,
                                             &apos;height=400,width=600,status=yes,toolbar=no,menubar=no,location=no,center=yes,resizable=no&apos;);
     mywin.focus();
}else{
    alert(&apos;Please select atleast one task.&apos;);
}</url>
    </webLinks>
    <webLinks>
        <fullName>i__ViewSourceEmail</fullName>
        <availability>online</availability>
        <description>Link to the source Email of this Task, if any.</description>
        <displayType>link</displayType>
        <linkType>javascript</linkType>
        <masterLabel>View Source Email</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{!IF( ISNULL( Task.i__Email__c ) , &quot;alert(&apos;This task is not linked to an Email&apos;);&quot;, &quot;window.location = &apos;/&quot; + Task.i__Email__c + &quot;&apos;;&quot;)}</url>
    </webLinks>
    <webLinks>
        <fullName>qbdialer__Create_List</fullName>
        <availability>online</availability>
        <displayType>massActionButton</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Create List</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <requireRowSelection>true</requireRowSelection>
        <url>{!REQUIRESCRIPT(&apos;https://sforce.insidesales.com/js/json.js&apos;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/11.1/connection.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/lib/jquery.min.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/lib/jcookie.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/lib/jstorage.min.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/lib/jsonp.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/lib/persist.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/ISConference.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/c2c/ISClickToCall.js&quot;)}
{!REQUIRESCRIPT(&quot;/resource/qbdialer__c2c_resources/20150529123310/c2csf.js&quot;)}

var getTabClass = function() {
	var bodytags = document.getElementsByTagName(&quot;body&quot;);
	var classes  = bodytags[0].className.split(&apos; &apos;);
	var hostname = window.location.hostname;
	try {
		try {
			sforce.connection.sessionId=&quot;{!$Api.Session_ID}&quot;;
		} catch (e) {
			//
		}
		user  = sforce.connection.getUserInfo();
		var theme = user.userUiSkin;
		return {
			&quot;css_base&quot;  : &quot;https://&quot;+window.location.hostname,
			&quot;css_theme&quot; : theme,
			&quot;css_class&quot; : classes[0]};
	} catch (e) {
		return {
			&quot;css_base&quot; : &quot;https://&quot;+window.location.hostname,
			&quot;css_class&quot; : classes[0],
			&quot;css_theme&quot; : false
		};
	}
};
var getTabClassString = function() {
	var css_info = getTabClass();
	var tmp_url = &quot;&quot;;
	tmp_url += &apos;&amp;css_base=&apos;+encodeURIComponent(css_info.css_base);
	if (css_info.css_theme) {
		tmp_url += &apos;&amp;css_theme=&apos;+encodeURIComponent(css_info.css_theme);
	}
	tmp_url += &apos;&amp;css_class=&apos;+encodeURIComponent(css_info.css_class);
	return tmp_url;
};
openPopup = function(){
    var data = &quot;&quot;;
    var items = idArray.join(&quot;,&quot;);
    pd.setSalesforceInstance(true);
    pd.makeRequest(&apos;createStaticDialerList&apos;,
        function (data) {
            if (!data) {
                alert(&apos;There was a problem creating the list.&apos;);
                return;
            }
            if (data.errors &amp;&amp; data.errors.length &gt; 0) {
                var err = &quot;&quot;;
                if (data.errors[0] &amp;&amp; data.errors[0][&apos;message&apos;]) {
                    err = &apos;\nThe following message was returned.\n\n&apos;+data.errors[0][&apos;message&apos;];
                }
                alert(&apos;There was a problem creating the list.&apos;+err);
                return;
            }
            if (!data.items || !data.items.length) {
                alert(&apos;At least one selected row must be related to an Account, Contact, or Lead.&apos;);
                return;
            }
            var html = &quot;&lt;form name=&apos;createList&apos; method=&apos;post&apos; action=&apos;https://{!$User.qbdialer__is_subdomain__c}.insidesales.com/noauth/create_sf_list?&quot;+
                &quot;organization_id={!$Organization.Id}&amp;type=Task&quot;+
                &quot;&amp;salesforce_package_version=6.11.34&quot;+
                &quot;&amp;token={!User.qbdialer__is_token__c}&amp;type=Task&quot;+
                &quot;&amp;agent_phone={!User.Phone}&quot;;
            html += getTabClassString();
            html += &quot;&apos;&gt;&lt;input type=&apos;submit&apos; style=&apos;visibility:hidden&apos;&gt;&quot;;
            for (var i=0; i &lt; data.items.length; i++) {
                html += &quot;&lt;input type=&apos;hidden&apos; name=&apos;leads[]&apos; value=&apos;&quot;+data.items[i]+&quot;&apos;&gt;&quot;;
            }
            html += &quot;&lt;&quot;+&quot;/form&gt;&quot;;
            html += &quot;&lt;script&gt;document.createList.submit();&lt;&quot;+&quot;/script&gt;&quot;;
            var host = document.location.protocol + &quot;//&quot; + document.location.hostname;
            var w = window.open(host, &quot;&quot;, &quot;height=700,width=800,menubar=0,resizable=1,scrollbars=1,status=0,titlebar=0,toolbar=0,location=0&quot;);
            w.document.write(html);
        },
        function (err) {
            alert(&apos;There was a problem creating the list.\n\n&apos;+err);
        },
        &quot;&amp;type=Activity&amp;ids=&quot; + items
    );
}

var user_oauth_token = &apos;{!JSENCODE($User.qbdialer__is_token__c)}&apos;;
if (!user_oauth_token) {
	window.location.href=&quot;/apex/InsideSales_OAuth_Setup&quot;;
} else {
	var idArray = {!GETRECORDIDS($ObjectType.Task)};
	if(idArray.length == 0){
		alert(&quot;Please select at least one row&quot;);
	}
	else{
		openPopup();
	}
}</url>
    </webLinks>
    <webLinks>
        <fullName>qbdialer__Launch_Click_to_Call</fullName>
        <availability>online</availability>
        <description>For Beta</description>
        <displayType>massActionButton</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Launch Click-to-Call (Old)</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <requireRowSelection>true</requireRowSelection>
        <url>var th = window.top.document.body;
			var s = window.top.document.createElement(&apos;script&apos;);
			s.setAttribute(&apos;type&apos;,&apos;text/javascript&apos;);
			s.setAttribute(&apos;src&apos;,&quot;/resource/qbdialer__c2c_resources/20150529123310/c2c_console.js&quot;);
			th.appendChild(s);</url>
    </webLinks>
    <webLinks>
        <fullName>qbdialer__Manage_Lists</fullName>
        <availability>online</availability>
        <displayType>massActionButton</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Manage Lists</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <requireRowSelection>true</requireRowSelection>
        <url>{!REQUIRESCRIPT(&apos;https://sforce.insidesales.com/js/json.js&apos;)}

openPopup = function(){ 
	var html = &quot;&lt;form name=&apos;createList&apos; method=&apos;post&apos; action=&apos;https://{!$User.qbdialer__is_subdomain__c}.insidesales.com/noauth/manage_sf_lists?&quot;+ 
		&quot;organization_id={!$Organization.Id}&quot;+ 
		&quot;&amp;salesforce_package_version=6.11.34&quot;+
		&quot;&amp;token={!User.qbdialer__is_token__c}&quot;+ 
		&quot;&amp;agent_phone={!User.Phone}&apos;&gt;&lt;input type=&apos;submit&apos; style=&apos;visibility:hidden&apos;&gt;&quot;+
		&quot;&lt;&quot;+&quot;/form&gt;&quot;+
		&quot;&lt;script&gt;document.createList.submit();&lt;&quot;+&quot;/script&gt;&quot;; 
	var host = document.location.protocol+&quot;//&quot;+ 
	document.location.hostname; 
	var w = window.open(host, &quot;&quot;, &quot;height=200,width=600,menubar=0,resizable=1,scrollbars=1,status=0,titlebar=0,toolbar=0,location=0&quot;); 
	w.document.write(html); 
}

var user_oauth_token = &apos;{!JSENCODE($User.qbdialer__is_token__c)}&apos;;
if (!user_oauth_token) {
	window.location.href=&quot;/apex/InsideSales_OAuth_Setup&quot;;
} else {
	openPopup();
}</url>
    </webLinks>
</CustomObject>
